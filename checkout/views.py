from django.shortcuts import render, redirect
from django.views.decorators.http import require_POST
from django.contrib import messages
from cart.utils import get_or_create_cart
from .models import Order, OrderItem
from django.conf import settings

import asyncio
from aiogram import Bot

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram –±–æ—Ç–∞
bot = Bot(token=settings.TELEGRAM_TOKEN)

def send_telegram_message_sync(text):
    try:
        loop = asyncio.get_running_loop()
    except RuntimeError:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

    if loop.is_running():
        asyncio.create_task(bot.send_message(
            chat_id=settings.TELEGRAM_CHAT_ID,
            text=text,
            parse_mode="Markdown"
        ))
    else:
        loop.run_until_complete(bot.send_message(
            chat_id=settings.TELEGRAM_CHAT_ID,
            text=text,
            parse_mode="Markdown"
        ))



def checkout(request):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    cart = get_or_create_cart(request)
    cart_items = cart.items.select_related('product').prefetch_related('product__images')
    
    if not cart_items:
        messages.error(request, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')
        return redirect('cart:cart')
    
    subtotal = cart.total_price
    delivery_cost = 300 if subtotal < 10000 else 0
    
    discount = 0
    
    total = subtotal + delivery_cost - discount
    
    context = {
        'cart_items': cart_items,
        'subtotal': subtotal,
        'delivery_cost': delivery_cost,
        'discount': discount,
        'total': total,
    }
    return render(request, 'checkout/checkout.html', context)


@require_POST
def process_order(request):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞"""
    cart = get_or_create_cart(request)
    cart_items = cart.items.select_related('product')
    
    if not cart_items:
        messages.error(request, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')
        return redirect('cart:cart')
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    subtotal = cart.total_price
    delivery_cost = 300 if request.POST.get('delivery_method') == 'nova_poshta' else 0
    if subtotal >= 10000:
        delivery_cost = 0
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
    discount = 0
    
    total = subtotal + delivery_cost - discount
    
    order = Order.objects.create(
        first_name=request.POST.get('first_name'),
        last_name=request.POST.get('last_name'),
        phone=request.POST.get('phone'),
        email=request.POST.get('email', ''),
        delivery_method=request.POST.get('delivery_method'),
        city=request.POST.get('city', ''),
        office=request.POST.get('office', ''),
        messengers=request.POST.get('messengers', ''),
        payment_method=request.POST.get('payment_method'),
        subtotal=subtotal,
        delivery_cost=delivery_cost,
        discount=discount,
        total=total,
        notes=request.POST.get('notes', ''),
    )

    # # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∫–ª–∞–¥—É
    # for cart_item in cart_items:
    #     OrderItem.objects.create(
    #         order=order,
    #         product=cart_item.product,
    #         product_name=cart_item.product.name,
    #         product_price=cart_item.product.final_price,
    #         quantity=cart_item.quantity,
    #         selected_options=cart_item.selected_options,
    #         total_price=cart_item.total_price,
    #     )
    #     cart_item.product.stock -= cart_item.quantity
    #     cart_item.product.save()
    


    # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è Telegram
    text = (
        f"*–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è* #{order.order_number}\n\n"
        f"*üë§ –Ü–º'—è:* {order.first_name} {order.last_name}\n"
        f"*üìû –¢–µ–ª–µ—Ñ–æ–Ω:* {order.phone}\n"
        f"*üìß Email:* {order.email}\n"
        f"*üèô –ú—ñ—Å—Ç–æ:* {order.city}\n"
        f"*üè§ –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è:* {order.office}\n"
        f"*üöö –î–æ—Å—Ç–∞–≤–∫–∞:* {order.get_delivery_method_display()}\n"
        f"*üí∞ –û–ø–ª–∞—Ç–∞:* {order.get_payment_method_display()}\n"
        f"*üíµ –°—É–º–∞:* {order.total} –≥—Ä–Ω\n"
        f"*üìù –ü—Ä–∏–º—ñ—Ç–∫–∏:* {order.notes or '‚Äî'}"
    )


    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
    send_telegram_message_sync(text)

    # –û—á–∏—â–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞
    cart.items.all().delete()

    messages.success(request, f'–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order.order_number} —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ! –ú–∏ –∑–≤\'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.')
    return redirect('store:index')

